<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">

	<select id="selectCountry" resultType="country">
		SELECT *
		FROM COUNTRY
	</select>
	
	<select id="selectGrape" resultType="grape">
		SELECT *
		FROM GRAPE
	</select>
	
	
	
	<!-- 공지 게시판 -->
	
	<select id="noticeList" resultType="notice">
		SELECT * FROM NOTICE
		WHERE STATUS = 'Y'
		<if test="keyword != null and keyword != ''">
			AND
			<choose>
			
				<when test="condition == 'title'">
					NOTICE_TITLE LIKE '%'||#{keyword}||'%'
				</when>
				
				<when test="condition == 'content'">
					NOTICE_CONTENT LIKE '%'||#{keyword}||'%'
				</when>
				
				<when test="condition == 'titleAndContent'">
					(NOTICE_TITLE LIKE '%'||#{keyword}||'%'
						OR
					NOTICE_CONTENT LIKE '%'||#{keyword}||'%')
				</when>
				
			</choose>
		</if>
		
		ORDER BY NOTICE_NO DESC
	</select>
	
	
	<select id="noticeDetail" resultType="notice" parameterType="int">
		SELECT * FROM NOTICE
		WHERE NOTICE_NO = #{noticeNo} AND STATUS = 'Y'
	</select>

	<insert id="noticeEnroll" parameterType="notice">
		INSERT INTO NOTICE
		VALUES(
			SEQ_NOTICE.NEXTVAL,
			#{noticeTitle},
			#{noticeContent},
			DEFAULT,
			#{originName},
			#{changeName},
			DEFAULT
		)
	</insert>
	
	<update id="deleteNotice" parameterType="notice">
		UPDATE NOTICE
		SET STATUS = 'N'
		WHERE NOTICE_NO = #{noticeNo}
	</update>
	
	<select id="noticeListCount" resultType="int">
		SELECT COUNT(*) FROM NOTICE
		WHERE STATUS = 'Y'
		
		<if test="keyword != null and keyword != ''">
			AND
			<choose>
			
				<when test="condition == 'title'">
					NOTICE_TITLE LIKE '%'||#{keyword}||'%'
				</when>
				
				<when test="condition == 'content'">
					NOTICE_CONTENT LIKE '%'||#{keyword}||'%'
				</when>
				
				<when test="condition == 'titleAndContent'">
					(NOTICE_TITLE LIKE '%'||#{keyword}||'%'
						OR
					NOTICE_CONTENT LIKE '%'||#{keyword}||'%')
				</when>
				
			</choose>
		</if>
		
	</select>
	

	
	<!-- <select id="selectInfoList" resultType="info2">
		SELECT * FROM INFO2
		WHERE DEPTH = #{depth}
	</select> -->
	
	<select id="selectInfoList" resultType="info2">
		SELECT * FROM INFO2
		ORDER BY INFO_NO ASC
	</select>
	
	<select id="selectInfo" resultType="info2">
		SELECT * FROM INFO2
		WHERE INFO_NAME = #{infoName}
	</select>
	
	
	
	<select id="selectTypeList" resultType="wineType">
		SELECT * FROM WINE_TYPE
	</select>
	
	<update id="updateInfo" parameterType="info2">
		UPDATE INFO2
		SET SUBTITLE = #{subtitle},
			CONTENT = #{content}
			
			<if test="#{originName} != null and #{changeName} != null and #{originName} != '' and #{changeName} != ''">	
				,		
				ORIGIN_NAME = #{originName},
				CHANGE_NAME = #{changeName}
			</if>
			
		WHERE INFO_NAME = #{infoName}
	</update>
	
	
	
	
	
	
	
	
	<select id="selectWineList" resultMap="wineExtMap">
		SELECT 
			WINE_NO,
			WINE_NAME,
			WINE_TYPE_NAME,
			GRAPE_NAME,
			COUNTRY_NAME,
			VINTAGE,
			VOLUME,
			QUANTITY,
			PRICE,
			STATUS 
		FROM WINE W
		LEFT JOIN COUNTRY C USING(COUNTRY_NO)
		LEFT JOIN GRAPE G USING(GRAPE_NO)
		LEFT JOIN WINE_TYPE WT USING(WINE_TYPE_NO)
		ORDER BY WINE_NO DESC
	</select>
	
	<resultMap type="wineExt" id="wineExtMap">
		<id column="WINE_NO" property="wineNo"/>
		<result column="WINE_NAME" property="wineName"/>
		<result column="GRAPE_NO" property="grapeNo"/>
		<result column="COUNTRY_NO" property="countryNo"/>
		<result column="VINTAGE" property="vintage"/>
		<result column="PRICE" property="price"/>
		<result column="VOLUME" property="volume"/>
		<result column="QUANTITY" property="quantity"/>
		<result column="CONTENT" property="content"/>
		<result column="STATUS" property="status"/>
		
		<association property="wineImage">
			<id column="WINE_NO" property="wineNo"/>
			<result column="ORIGIN_NAME" property="originName"/>
			<result column="CHANGE_NAME" property="changeName"/>
		</association>
		
		<association property="country">
			<id column="COUNTRY_NO" property="countryNo"/>
			<result column="COUNTRY_NAME" property="countryName"/>
			<result column="COUNTRY_ENG_NAME" property="countryEngName"/>
		</association>
		
		<association property="characteristic">
			<id column="WINE_NO" property="wineNo"/>
			<result column="BODY" property="body"/>
			<result column="SWEET" property="sweet"/>
			<result column="BITTER" property="bitter"/>
			<result column="SOUR" property="sour"/>
		</association>
		
		<association property="grape">
			<id column="GRAPE_NO" property="grapeNo"/>
			<result column="GRAPE_NAME" property="grapeName"/>
			<result column="WINE_TYPE_NO" property="wineTypeNo"/>
		</association>
		
		<association property="wineType">
			<id column="WINE_TYPE_NO" property="wineTypeNo"/>
			<result column="WINE_TYPE_NAME" property="wineTypeName"/>
			<result column="WINE_TYPE_ENG_NAME" property="wineTypeEngName"/>
		</association>
		
	</resultMap>
	

	
	
	
	
	
	<!-- <resultMap type="grapeExt" id="grapeExtMap">
	
		<id column="GRAPE_NO" property="grapeNo"/>
		<result column="GRAPE_NAME" property="grapeName"/>
		<result column="WINE_TYPE_NO" property="wineTypeNo"/>
		
		<association property="wineType">
			<id column="WINE_TYPE_NO" property="wineTypeNo"/>
			<result column="WINE_TYPE_NAME" property="wineTypeName"/>
			<result column="WINE_TYPE_ENG_NAME" property="wineTypeEngName"/>
		</association>
		
	</resultMap> -->
	
	
	
	<update id="updateWine" parameterType="wineExt">
		UPDATE WINE
		SET WINE_NAME = #{wineName},
			GRAPE_NO = #{grapeNo},
			COUNTRY_NO = #{countryNo},
			VINTAGE = #{vintage},
			PRICE = #{price},
			VOLUME = #{volume},
			QUANTITY = #{quantity},
			CONTENT = #{content},
			STATUS = #{status}
		WHERE WINE_NO = #{wineNo}
	</update>
	
	<update id="updateCharacteristic" parameterType="wineExt">
		UPDATE CHARACTERISTIC
		SET BODY = #{characteristic.body},
			SWEET = #{characteristic.sweet},
			BITTER = #{characteristic.bitter},
			SOUR = #{characteristic.sour}
		WHERE WINE_NO = #{wineNo}
	</update>
	
	<update id="updateWineImage" parameterType="wineExt">
		UPDATE WINE_IMAGE
		SET ORIGIN_NAME = #{wineImage.originName},
			CHANGE_NAME = #{wineImage.changeName}
		WHERE WINE_NO = #{wineNo}
	</update>
	
	
	
	
	
	<select id="selectWine" resultMap="wineExtMap">
		SELECT * 
		FROM WINE W
		LEFT JOIN WINE_IMAGE USING(WINE_NO)
		LEFT JOIN COUNTRY C USING(COUNTRY_NO)
		LEFT JOIN CHARACTERISTIC CH USING(WINE_NO)
		LEFT JOIN GRAPE G USING(GRAPE_NO)
		LEFT JOIN WINE_TYPE WT USING(WINE_TYPE_NO)
		WHERE WINE_NO = #{wineNo}
	</select>
	
	
	<select id="grapeList2" resultType="grape">
		SELECT * FROM GRAPE
		WHERE WINE_TYPE_NO = #{wineTypeNo}
	</select>
	
	
	<insert id="insertWine2" parameterType="wineExt" useGeneratedKeys="true">
		INSERT INTO WINE
		VALUES(
			WINE_SEQ.NEXTVAL,
			#{wineName},
			#{grapeNo},
			#{countryNo},
			#{vintage},
			#{price},
			#{volume},
			#{quantity},
			#{content},
			#{status}
		)
	</insert>
	
	
	<insert id="insertCharacteristic">
	
		<selectKey order="BEFORE" keyProperty="wineNo" resultType="int">
			SELECT WINE_SEQ.CURRVAL FROM DUAL
		</selectKey>
		
			INSERT INTO CHARACTERISTIC
			VALUES(
				#{wineNo},
				#{characteristic.body},
				#{characteristic.sweet},
				#{characteristic.bitter},
				#{characteristic.sour}
			)
	</insert>
	
	<insert id="insertWineIamge">
		<selectKey order="BEFORE" keyProperty="wineNo" resultType="int">
			SELECT WINE_SEQ.CURRVAL FROM DUAL 
		</selectKey>
		INSERT INTO WINE_IMAGE
		VALUES(
			#{wineNo},
			#{wineImage.originName},
			#{wineImage.changeName}
		)
	</insert>
	
	
	
	
<!-- ============================== 민욱 시작 ============================== -->
	<!-- FAQ 관련 쿼리 -->
    <select id="selectAllFaqs" resultType="com.kh.winepicker.model.vo.Faq">
        SELECT * FROM FAQ
    </select>

    <select id="searchFaqs" parameterType="String" resultType="com.kh.winepicker.model.vo.Faq">
        SELECT * FROM FAQ WHERE FAQ_TITLE LIKE '%' || #{keyword} || '%'
    </select>

    <select id="selectFaq" parameterType="int" resultType="com.kh.winepicker.model.vo.Faq">
        SELECT * FROM FAQ WHERE FAQ_NO = #{faqNo}
    </select>

    <update id="updateFaq" parameterType="com.kh.winepicker.model.vo.Faq">
        UPDATE FAQ SET FAQ_TITLE = #{faqTitle}, FAQ_CONTENT = #{faqContent} WHERE FAQ_NO = #{faqNo}
    </update>

    <delete id="deleteFaq" parameterType="list">
        DELETE FROM FAQ WHERE FAQ_NO IN
        <foreach item="faqNo" collection="list" open="(" separator="," close=")">
            #{faqNo}
        </foreach>
    </delete>

    <insert id="insertFaq" parameterType="com.kh.winepicker.model.vo.Faq">
        INSERT INTO FAQ (FAQ_TITLE, FAQ_CONTENT) VALUES (#{faqTitle}, #{faqContent})
    </insert>

    <!-- Ask 관련 쿼리 -->
    <select id="selectAllAsk" resultType="com.kh.winepicker.model.vo.Ask">
        SELECT ASK_NO, ASK_TITLE, ASK_CONTENT, CREATE_DATE, MODIFY_DATE, RESPONSE_CONTENT, ORIGIN_NAME, CHANGE_NAME, USER_NO, RESPONSE_STATUS
        FROM ASK
    </select>
    
    <select id="searchAsks" parameterType="String" resultType="com.kh.winepicker.model.vo.Ask">
        SELECT ASK_NO, ASK_TITLE, ASK_CONTENT, CREATE_DATE, MODIFY_DATE, RESPONSE_CONTENT, ORIGIN_NAME, CHANGE_NAME, USER_NO, RESPONSE_STATUS
        FROM ASK
        WHERE ASK_TITLE LIKE '%' || #{keyword} || '%'
    </select>

    <!-- ASK 추가 -->
    <insert id="insertAsk" parameterType="com.kh.winepicker.model.vo.Ask">
	    INSERT INTO ASK (ASK_NO, ASK_TITLE, ASK_CONTENT, CREATE_DATE, MODIFY_DATE, RESPONSE_CONTENT, ORIGIN_NAME, CHANGE_NAME, USER_NO, RESPONSE_STATUS)
	    VALUES (ask_seq.NEXTVAL, #{askTitle}, #{askContent}, SYSDATE, NVL(#{modifyDate}, SYSDATE), #{responseContent}, #{originName}, #{changeName}, #{userNo}, #{responseStatus})
	</insert>
     
    <delete id="deleteAsk" parameterType="list">
        DELETE FROM ASK WHERE ASK_NO IN
        <foreach item="askNo" collection="list" open="(" separator="," close=")">
            #{askNo}
        </foreach>
    </delete>
    
    <select id="selectAskByNo" parameterType="int" resultType="com.kh.winepicker.model.vo.Ask">
        SELECT ASK_NO, ASK_TITLE, ASK_CONTENT, CREATE_DATE, MODIFY_DATE, RESPONSE_CONTENT, ORIGIN_NAME, CHANGE_NAME, USER_NO, RESPONSE_STATUS
        FROM ASK
        WHERE ASK_NO = #{askNo}
    </select>

    <update id="updateAsk" parameterType="com.kh.winepicker.model.vo.Ask">
        UPDATE ASK
        SET ASK_TITLE = #{askTitle},
            ASK_CONTENT = #{askContent},
            MODIFY_DATE = SYSDATE
        WHERE ASK_NO = #{askNo}
    </update>

    <!-- Review 관련 쿼리 -->
    <!-- 모든 리뷰 가져오기 -->
    <select id="selectAllReviews" resultType="com.kh.winepicker.model.vo.Review">
        SELECT * FROM REVIEW
    </select>

    <!-- 검색된 리뷰 가져오기 -->
    <select id="searchReviews" parameterType="String" resultType="com.kh.winepicker.model.vo.Review">
        SELECT * FROM REVIEW WHERE CONTENT LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <!-- 리뷰 추가 -->
    <insert id="insertReview" parameterType="com.kh.winepicker.model.vo.Review">
        INSERT INTO REVIEW (ORDER_NO, CONTENT, CREATE_DATE, POINT, STATUS, MODIFY_DATE)
        VALUES (#{orderNo}, #{content}, #{createDate}, #{point}, #{status}, #{modifyDate})
    </insert>

    <!-- 선택된 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="list">
        DELETE FROM REVIEW WHERE REVIEW_NO IN
        <foreach item="reviewNo" collection="list" open="(" separator="," close=")">
            #{reviewNo}
        </foreach>
    </delete>

    <!-- 리뷰 번호로 리뷰 가져오기 -->
    <select id="getReviewByNo" parameterType="int" resultType="com.kh.winepicker.model.vo.Review">
        SELECT * FROM REVIEW WHERE REVIEW_NO = #{reviewNo}
    </select>

    <!-- 리뷰 답변 업데이트 -->
    <update id="updateReviewReply" parameterType="map">
        UPDATE REVIEW
        SET CONTENT = #{replyContent}, MODIFY_DATE = SYSDATE
        WHERE REVIEW_NO = #{reviewNo}
    </update>
<!-- ============================== 민욱 끝 ============================== -->	
	
	<select id="popupList" resultType="popup">
		SELECT * FROM POPUP
	</select>
	
	<insert id="popupEnroll" parameterType="popup">
		INSERT INTO POPUP
		VALUES(
			SEQ_POPUP.NEXTVAL,
			#{popupTitle},
			#{originName},
			#{changeName},
			DEFAULT
		)
	</insert>
	
	
	
	
	
	
	
	
	
	


</mapper>