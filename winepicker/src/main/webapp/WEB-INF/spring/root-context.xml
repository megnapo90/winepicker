<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->

	<!--	=============== DB연결 설정 3단계 ===============  	-->
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="C##WINEPICKER" />
		<property name="password" value="WINEPICKER" />
	</bean>
	
	<!-- 2) Mybatis Spring에서 제공하는 sql명령어 실행을 위한 도구 등록(SqlSessionFactory생성) -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		
		<!-- 연결을 위한 도구로 생성한 bean객체의 id값 제시 -->
		<property name="dataSource" ref="dataSource"/>
		
		<!-- 매퍼 등록 : 패턴을 지정하여 앞으로 생성할 모든 mapper파일을 한번에 읽어올 수 있음 -->
		<property name="mapperLocations" value="classpath:mapper/**/*.xml"/>
	</bean>
	
	<!-- 3) SQL구문을 위한 템플릿을 제공하는 도구 등록 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
		<!-- sqlSession을 얻어내기 위한 도구 설정 -->
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>

	<!-- 트랜잭션 제어 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- ==================== DB 연결 끝 ==================== -->

	<!-- ===== 업로드 되는 파일에 대한 설정 ===== -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 인코딩처리 -->
		<property name="defaultEncoding" value="UTF-8"/>
		
		<!-- 104857600byte == 100MB 
			기본값 : 10240byte (1KB)
			1MB == 1024KB == 1024 * 1024 byte
		-->
		<!-- <property name="maxUploadSizePerFile"/> 개별 파일 크기 설정 -->
		<property name="maxUploadSize" value="10000000"/>
		<property name="maxInMemorySize" value="10000000"/>
	</bean>   <!-- email 인증 관련   -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com" />
        <property name="port" value="587" />
        <property name="username" value="winepickerservice@gmail.com"/>
        <property name="password" value="l w x w v g n r k u q r q n e q" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>
    

</beans>

